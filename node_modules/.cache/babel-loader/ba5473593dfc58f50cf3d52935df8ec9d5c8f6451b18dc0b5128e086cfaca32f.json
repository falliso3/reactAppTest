{"ast":null,"code":"var _jsxFileName = \"/home/felix/ASU/PornVol7/CSE485/Capstone/my-app/src/FraudCSVAnalyzer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\n\n// FraudCsvAnalyzer\n// A single-file React component (Tailwind-ready) that accepts a CSV file,\n// parses it in-browser, runs simple fraud-detection heuristics, and\n// displays / exports flagged transactions.\n\n// How to use: drop this file into your React app and import default export:\n// import FraudCsvAnalyzer from './FraudCsvAnalyzer';\n// <FraudCsvAnalyzer />\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FraudCsvAnalyzer() {\n  _s();\n  const [rawCsv, setRawCsv] = useState(\"\");\n  const [rows, setRows] = useState([]); // array of objects\n  const [headers, setHeaders] = useState([]);\n  const [flagged, setFlagged] = useState([]);\n  const [threshold, setThreshold] = useState(1000); // amount threshold\n  const [timeWindowHours, setTimeWindowHours] = useState(24);\n  const [duplicateTolerance, setDuplicateTolerance] = useState(2); // duplicates count to flag\n  const [summary, setSummary] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // A small CSV parser that handles quoted fields and commas.\n  function parseCSV(text) {\n    const out = [];\n    const rows = text.split(/\\r?\\n/).filter(r => r.trim() !== \"\");\n    if (rows.length === 0) return {\n      headers: [],\n      data: []\n    };\n    const parseLine = line => {\n      const fields = [];\n      let cur = \"\";\n      let inQuotes = false;\n      for (let i = 0; i < line.length; i++) {\n        const ch = line[i];\n        if (ch === '\"') {\n          if (inQuotes && line[i + 1] === '\"') {\n            cur += '\"';\n            i++; // skip next quote\n          } else {\n            inQuotes = !inQuotes;\n          }\n        } else if (ch === ',' && !inQuotes) {\n          fields.push(cur);\n          cur = \"\";\n        } else {\n          cur += ch;\n        }\n      }\n      fields.push(cur);\n      return fields;\n    };\n    const hdr = parseLine(rows[0]).map(h => h.trim());\n    for (let i = 1; i < rows.length; i++) {\n      const line = rows[i];\n      const vals = parseLine(line);\n      // if shorter, pad with empty strings\n      while (vals.length < hdr.length) vals.push(\"\");\n      const obj = {};\n      for (let j = 0; j < hdr.length; j++) obj[hdr[j] || `column_${j}`] = vals[j] || \"\";\n      out.push(obj);\n    }\n    return {\n      headers: hdr,\n      data: out\n    };\n  }\n  function handleFile(e) {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      const text = reader.result;\n      setRawCsv(text);\n      const {\n        headers,\n        data\n      } = parseCSV(text);\n      setHeaders(headers);\n      setRows(data);\n      runHeuristics(headers, data);\n    };\n    reader.readAsText(file);\n  }\n  function runHeuristics(headers, data) {\n    // Heuristics (simple, client-side):\n    // - Large absolute amount > threshold\n    // - Duplicate transactions (same date, amount, description) appears >= duplicateTolerance times\n    // - Missing payee/description\n    // - Suspicious keywords in description\n    // - Strange balance jumps (if a balance column exists)\n\n    const amountKey = guessKey(headers, [\"amount\", \"amt\", \"transaction_amount\", \"value\"]);\n    const dateKey = guessKey(headers, [\"date\", \"transaction_date\", \"timestamp\"]);\n    const descKey = guessKey(headers, [\"description\", \"memo\", \"details\", \"payee\"]);\n    const balanceKey = guessKey(headers, [\"balance\", \"running_balance\"]);\n    const keywordList = [\"unknown\", \"dispute\", \"chargeback\", \"refund\", \"error\", \"suspicious\", \"fraud\", \"unauthorized\"];\n    const flaggedIndices = new Set();\n\n    // Parse amounts and dates\n    const parsed = data.map((r, idx) => {\n      const amtRaw = amountKey ? r[amountKey] : \"\";\n      const amt = parseFloat((amtRaw || \"\").replace(/[^0-9.-]/g, \"\"));\n      let dt = null;\n      if (dateKey && r[dateKey]) {\n        const parsedDate = new Date(r[dateKey]);\n        if (!isNaN(parsedDate)) dt = parsedDate;\n      }\n      return {\n        r,\n        amt: isNaN(amt) ? null : amt,\n        dt,\n        idx\n      };\n    });\n\n    // large amounts\n    parsed.forEach(p => {\n      if (p.amt !== null && Math.abs(p.amt) >= threshold) flaggedIndices.add(p.idx);\n    });\n\n    // missing description/payee\n    if (descKey) {\n      parsed.forEach(p => {\n        const desc = (p.r[descKey] || \"\").trim();\n        if (!desc) flaggedIndices.add(p.idx);else {\n          const lower = desc.toLowerCase();\n          for (const kw of keywordList) if (lower.includes(kw)) flaggedIndices.add(p.idx);\n        }\n      });\n    }\n\n    // duplicates\n    const dupMap = new Map();\n    parsed.forEach(p => {\n      var _p$amt;\n      const key = `${p.dt ? p.dt.toISOString().slice(0, 10) : \"nodate\"}::${(_p$amt = p.amt) !== null && _p$amt !== void 0 ? _p$amt : \"namt\"}::${descKey && p.r[descKey] || \"nodesc\"}`;\n      dupMap.set(key, (dupMap.get(key) || 0) + 1);\n    });\n    for (const [key, count] of dupMap.entries()) if (count >= duplicateTolerance) {\n      // flag all rows matching\n      parsed.forEach(p => {\n        var _p$amt2;\n        const k = `${p.dt ? p.dt.toISOString().slice(0, 10) : \"nodate\"}::${(_p$amt2 = p.amt) !== null && _p$amt2 !== void 0 ? _p$amt2 : \"namt\"}::${descKey && p.r[descKey] || \"nodesc\"}`;\n        if (k === key) flaggedIndices.add(p.idx);\n      });\n    }\n\n    // balance jumps heuristic\n    if (balanceKey && amountKey && dateKey) {\n      // sort by date\n      const withBalance = parsed.filter(p => p.dt && p.r[balanceKey] !== undefined && p.amt !== null);\n      withBalance.sort((a, b) => a.dt - b.dt);\n      for (let i = 1; i < withBalance.length; i++) {\n        const prev = withBalance[i - 1];\n        const cur = withBalance[i];\n        const prevBal = parseFloat((prev.r[balanceKey] || \"\").replace(/[^0-9.-]/g, \"\"));\n        const curBal = parseFloat((cur.r[balanceKey] || \"\").replace(/[^0-9.-]/g, \"\"));\n        if (!isNaN(prevBal) && !isNaN(curBal)) {\n          const delta = Math.abs(curBal - prevBal);\n          if (delta > Math.abs(cur.amt) * 3 + threshold) flaggedIndices.add(cur.idx);\n        }\n      }\n    }\n    const flaggedList = Array.from(flaggedIndices).sort((a, b) => a - b).map(i => ({\n      index: i,\n      row: data[i]\n    }));\n    setFlagged(flaggedList);\n    setSummary({\n      total: data.length,\n      flagged: flaggedList.length,\n      amountKey,\n      dateKey,\n      descKey,\n      balanceKey\n    });\n  }\n  function guessKey(headers, candidates) {\n    const lower = headers.map(h => (h || \"\").toLowerCase());\n    for (const c of candidates) {\n      const idx = lower.findIndex(h => h.includes(c));\n      if (idx >= 0) return headers[idx];\n    }\n    return null;\n  }\n  function downloadFlagged() {\n    if (!flagged.length) return;\n    const hdrLine = headers.join(\",\") + \"\\n\";\n    const lines = flagged.map(f => headers.map(h => csvEscape(f.row[h] || \"\")).join(\",\")).join(\"\\n\");\n    const csv = hdrLine + lines;\n    const blob = new Blob([csv], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"flagged_transactions.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n  function csvEscape(val) {\n    if (val == null) return \"\";\n    const s = String(val);\n    if (s.includes(\",\") || s.includes('\"') || s.includes(\"\\n\")) return '\"' + s.replace(/\"/g, '\"\"') + '\"';\n    return s;\n  }\n  function clear() {\n    setRawCsv(\"\");\n    setRows([]);\n    setHeaders([]);\n    setFlagged([]);\n    setSummary(null);\n    if (fileInputRef.current) fileInputRef.current.value = null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6 bg-white rounded-2xl shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-3\",\n      children: \"CSV Financial Fraud Detector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-600 mb-4\",\n      children: \"Upload a CSV (headers in first row). The detector uses simple client-side heuristics to flag suspicious transactions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3 items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        onChange: handleFile,\n        type: \"file\",\n        accept: \".csv,text/csv\",\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clear,\n        className: \"px-3 py-1 rounded bg-gray-100\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-3 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-sm\",\n          children: \"Amount threshold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0\",\n          max: \"50000\",\n          value: threshold,\n          onChange: e => setThreshold(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm mt-1\",\n          children: [\"Flag amounts \\u2265 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"$\", threshold]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 56\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-sm\",\n          children: \"Duplicate tolerance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"2\",\n          max: \"10\",\n          value: duplicateTolerance,\n          onChange: e => setDuplicateTolerance(Number(e.target.value)),\n          onBlur: () => runHeuristics(headers, rows)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm mt-1\",\n          children: [\"Flag when a transaction repeats \\u2265 \", duplicateTolerance, \" times\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-sm\",\n          children: \"Run analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => runHeuristics(headers, rows),\n            className: \"px-3 py-1 rounded bg-blue-600 text-white\",\n            children: \"Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadFlagged,\n            className: \"px-3 py-1 rounded bg-green-600 text-white\",\n            children: \"Download flagged\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 border rounded bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm\",\n        children: [\"Total transactions: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: summary.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm\",\n        children: [\"Flagged: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: summary.flagged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-600 mt-1\",\n        children: [\"Guessed columns \\u2014 amount: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: summary.amountKey || 'not found'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 81\n        }, this), \", date: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: summary.dateKey || 'not found'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 140\n        }, this), \", description: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: summary.descKey || 'not found'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 204\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto border rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-100\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-3 py-2 text-left\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), headers.map(h => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-3 py-2 text-left\",\n              children: h\n            }, h, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-3 py-2\",\n              children: \"Flagged\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [rows.map((r, i) => {\n            const isFlag = flagged.some(f => f.index === i);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: isFlag ? 'bg-red-50' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2 align-top\",\n                children: i + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), headers.map(h => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2 align-top whitespace-pre-wrap max-w-xs\",\n                children: r[h]\n              }, h, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-3 py-2 align-top\",\n                children: isFlag ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-red-700 font-medium\",\n                  children: \"Yes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 65\n                }, this) : '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this);\n          }), rows.length === 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: headers.length + 2,\n              className: \"px-3 py-4 text-center text-gray-500\",\n              children: \"No data loaded \\u2014 upload a CSV to begin.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-xs text-gray-600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n_s(FraudCsvAnalyzer, \"YpQPBHmt5ZjgV7gxkOv8vAkIHCs=\");\n_c = FraudCsvAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"FraudCsvAnalyzer\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","FraudCsvAnalyzer","_s","rawCsv","setRawCsv","rows","setRows","headers","setHeaders","flagged","setFlagged","threshold","setThreshold","timeWindowHours","setTimeWindowHours","duplicateTolerance","setDuplicateTolerance","summary","setSummary","fileInputRef","parseCSV","text","out","split","filter","r","trim","length","data","parseLine","line","fields","cur","inQuotes","i","ch","push","hdr","map","h","vals","obj","j","handleFile","e","_e$target$files","file","target","files","reader","FileReader","onload","result","runHeuristics","readAsText","amountKey","guessKey","dateKey","descKey","balanceKey","keywordList","flaggedIndices","Set","parsed","idx","amtRaw","amt","parseFloat","replace","dt","parsedDate","Date","isNaN","forEach","p","Math","abs","add","desc","lower","toLowerCase","kw","includes","dupMap","Map","_p$amt","key","toISOString","slice","set","get","count","entries","_p$amt2","k","withBalance","undefined","sort","a","b","prev","prevBal","curBal","delta","flaggedList","Array","from","index","row","total","candidates","c","findIndex","downloadFlagged","hdrLine","join","lines","f","csvEscape","csv","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","val","s","String","clear","current","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onChange","accept","onClick","min","max","Number","onBlur","isFlag","some","colSpan","_c","$RefreshReg$"],"sources":["/home/felix/ASU/PornVol7/CSE485/Capstone/my-app/src/FraudCSVAnalyzer.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\n// FraudCsvAnalyzer\n// A single-file React component (Tailwind-ready) that accepts a CSV file,\n// parses it in-browser, runs simple fraud-detection heuristics, and\n// displays / exports flagged transactions.\n\n// How to use: drop this file into your React app and import default export:\n// import FraudCsvAnalyzer from './FraudCsvAnalyzer';\n// <FraudCsvAnalyzer />\n\nexport default function FraudCsvAnalyzer() {\n  const [rawCsv, setRawCsv] = useState(\"\");\n  const [rows, setRows] = useState([]); // array of objects\n  const [headers, setHeaders] = useState([]);\n  const [flagged, setFlagged] = useState([]);\n  const [threshold, setThreshold] = useState(1000); // amount threshold\n  const [timeWindowHours, setTimeWindowHours] = useState(24);\n  const [duplicateTolerance, setDuplicateTolerance] = useState(2); // duplicates count to flag\n  const [summary, setSummary] = useState(null);\n  const fileInputRef = useRef(null);\n\n  // A small CSV parser that handles quoted fields and commas.\n  function parseCSV(text) {\n    const out = [];\n    const rows = text.split(/\\r?\\n/).filter((r) => r.trim() !== \"\");\n    if (rows.length === 0) return { headers: [], data: [] };\n    const parseLine = (line) => {\n      const fields = [];\n      let cur = \"\";\n      let inQuotes = false;\n      for (let i = 0; i < line.length; i++) {\n        const ch = line[i];\n        if (ch === '\"') {\n          if (inQuotes && line[i + 1] === '\"') {\n            cur += '\"';\n            i++; // skip next quote\n          } else {\n            inQuotes = !inQuotes;\n          }\n        } else if (ch === ',' && !inQuotes) {\n          fields.push(cur);\n          cur = \"\";\n        } else {\n          cur += ch;\n        }\n      }\n      fields.push(cur);\n      return fields;\n    };\n\n    const hdr = parseLine(rows[0]).map((h) => h.trim());\n    for (let i = 1; i < rows.length; i++) {\n      const line = rows[i];\n      const vals = parseLine(line);\n      // if shorter, pad with empty strings\n      while (vals.length < hdr.length) vals.push(\"\");\n      const obj = {};\n      for (let j = 0; j < hdr.length; j++) obj[hdr[j] || `column_${j}`] = vals[j] || \"\";\n      out.push(obj);\n    }\n    return { headers: hdr, data: out };\n  }\n\n  function handleFile(e) {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      const text = reader.result;\n      setRawCsv(text);\n      const { headers, data } = parseCSV(text);\n      setHeaders(headers);\n      setRows(data);\n      runHeuristics(headers, data);\n    };\n    reader.readAsText(file);\n  }\n\n  function runHeuristics(headers, data) {\n    // Heuristics (simple, client-side):\n    // - Large absolute amount > threshold\n    // - Duplicate transactions (same date, amount, description) appears >= duplicateTolerance times\n    // - Missing payee/description\n    // - Suspicious keywords in description\n    // - Strange balance jumps (if a balance column exists)\n\n    const amountKey = guessKey(headers, [\"amount\", \"amt\", \"transaction_amount\", \"value\"]);\n    const dateKey = guessKey(headers, [\"date\", \"transaction_date\", \"timestamp\"]);\n    const descKey = guessKey(headers, [\"description\", \"memo\", \"details\", \"payee\"]);\n    const balanceKey = guessKey(headers, [\"balance\", \"running_balance\"]);\n\n    const keywordList = [\"unknown\", \"dispute\", \"chargeback\", \"refund\", \"error\", \"suspicious\", \"fraud\", \"unauthorized\"];\n\n    const flaggedIndices = new Set();\n\n    // Parse amounts and dates\n    const parsed = data.map((r, idx) => {\n      const amtRaw = amountKey ? r[amountKey] : \"\";\n      const amt = parseFloat((amtRaw || \"\").replace(/[^0-9.-]/g, \"\"));\n      let dt = null;\n      if (dateKey && r[dateKey]) {\n        const parsedDate = new Date(r[dateKey]);\n        if (!isNaN(parsedDate)) dt = parsedDate;\n      }\n      return { r, amt: isNaN(amt) ? null : amt, dt, idx };\n    });\n\n    // large amounts\n    parsed.forEach((p) => {\n      if (p.amt !== null && Math.abs(p.amt) >= threshold) flaggedIndices.add(p.idx);\n    });\n\n    // missing description/payee\n    if (descKey) {\n      parsed.forEach((p) => {\n        const desc = (p.r[descKey] || \"\").trim();\n        if (!desc) flaggedIndices.add(p.idx);\n        else {\n          const lower = desc.toLowerCase();\n          for (const kw of keywordList) if (lower.includes(kw)) flaggedIndices.add(p.idx);\n        }\n      });\n    }\n\n    // duplicates\n    const dupMap = new Map();\n    parsed.forEach((p) => {\n      const key = `${p.dt ? p.dt.toISOString().slice(0, 10) : \"nodate\"}::${p.amt ?? \"namt\"}::${(descKey && p.r[descKey]) || \"nodesc\"}`;\n      dupMap.set(key, (dupMap.get(key) || 0) + 1);\n    });\n    for (const [key, count] of dupMap.entries()) if (count >= duplicateTolerance) {\n      // flag all rows matching\n      parsed.forEach((p) => {\n        const k = `${p.dt ? p.dt.toISOString().slice(0, 10) : \"nodate\"}::${p.amt ?? \"namt\"}::${(descKey && p.r[descKey]) || \"nodesc\"}`;\n        if (k === key) flaggedIndices.add(p.idx);\n      });\n    }\n\n    // balance jumps heuristic\n    if (balanceKey && amountKey && dateKey) {\n      // sort by date\n      const withBalance = parsed.filter((p) => p.dt && p.r[balanceKey] !== undefined && p.amt !== null);\n      withBalance.sort((a, b) => a.dt - b.dt);\n      for (let i = 1; i < withBalance.length; i++) {\n        const prev = withBalance[i - 1];\n        const cur = withBalance[i];\n        const prevBal = parseFloat((prev.r[balanceKey] || \"\").replace(/[^0-9.-]/g, \"\"));\n        const curBal = parseFloat((cur.r[balanceKey] || \"\").replace(/[^0-9.-]/g, \"\"));\n        if (!isNaN(prevBal) && !isNaN(curBal)) {\n          const delta = Math.abs(curBal - prevBal);\n          if (delta > Math.abs(cur.amt) * 3 + threshold) flaggedIndices.add(cur.idx);\n        }\n      }\n    }\n\n    const flaggedList = Array.from(flaggedIndices).sort((a, b) => a - b).map((i) => ({ index: i, row: data[i] }));\n    setFlagged(flaggedList);\n\n    setSummary({ total: data.length, flagged: flaggedList.length, amountKey, dateKey, descKey, balanceKey });\n  }\n\n  function guessKey(headers, candidates) {\n    const lower = headers.map((h) => (h || \"\").toLowerCase());\n    for (const c of candidates) {\n      const idx = lower.findIndex((h) => h.includes(c));\n      if (idx >= 0) return headers[idx];\n    }\n    return null;\n  }\n\n  function downloadFlagged() {\n    if (!flagged.length) return;\n    const hdrLine = headers.join(\",\") + \"\\n\";\n    const lines = flagged.map((f) => headers.map((h) => csvEscape(f.row[h] || \"\")).join(\",\") ).join(\"\\n\");\n    const csv = hdrLine + lines;\n    const blob = new Blob([csv], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"flagged_transactions.csv\";\n    a.click();\n    URL.revokeObjectURL(url);\n  }\n\n  function csvEscape(val) {\n    if (val == null) return \"\";\n    const s = String(val);\n    if (s.includes(\",\") || s.includes('\"') || s.includes(\"\\n\")) return '\"' + s.replace(/\"/g, '\"\"') + '\"';\n    return s;\n  }\n\n  function clear() {\n    setRawCsv(\"\");\n    setRows([]);\n    setHeaders([]);\n    setFlagged([]);\n    setSummary(null);\n    if (fileInputRef.current) fileInputRef.current.value = null;\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 bg-white rounded-2xl shadow-lg\">\n      <h2 className=\"text-2xl font-semibold mb-3\">CSV Financial Fraud Detector</h2>\n      <p className=\"text-sm text-gray-600 mb-4\">Upload a CSV (headers in first row). The detector uses simple client-side heuristics to flag suspicious transactions.</p>\n\n      <div className=\"flex gap-3 items-center mb-4\">\n        <input ref={fileInputRef} onChange={handleFile} type=\"file\" accept=\".csv,text/csv\" className=\"\" />\n        <button onClick={clear} className=\"px-3 py-1 rounded bg-gray-100\">Clear</button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3 mb-4\">\n        <div className=\"p-3 border rounded\">\n          <label className=\"text-sm\">Amount threshold</label>\n          <input type=\"range\" min=\"0\" max=\"50000\" value={threshold} onChange={(e) => setThreshold(Number(e.target.value))} />\n          <div className=\"text-sm mt-1\">Flag amounts ≥ <strong>${threshold}</strong></div>\n        </div>\n\n        <div className=\"p-3 border rounded\">\n          <label className=\"text-sm\">Duplicate tolerance</label>\n          <input type=\"number\" min=\"2\" max=\"10\" value={duplicateTolerance} onChange={(e) => setDuplicateTolerance(Number(e.target.value))} onBlur={() => runHeuristics(headers, rows)} />\n          <div className=\"text-sm mt-1\">Flag when a transaction repeats ≥ {duplicateTolerance} times</div>\n        </div>\n\n        <div className=\"p-3 border rounded\">\n          <label className=\"text-sm\">Run analysis</label>\n          <div className=\"mt-2 flex gap-2\">\n            <button onClick={() => runHeuristics(headers, rows)} className=\"px-3 py-1 rounded bg-blue-600 text-white\">Analyze</button>\n            <button onClick={downloadFlagged} className=\"px-3 py-1 rounded bg-green-600 text-white\">Download flagged</button>\n          </div>\n        </div>\n      </div>\n\n      {summary && (\n        <div className=\"mb-4 p-3 border rounded bg-gray-50\">\n          <div className=\"text-sm\">Total transactions: <strong>{summary.total}</strong></div>\n          <div className=\"text-sm\">Flagged: <strong>{summary.flagged}</strong></div>\n          <div className=\"text-xs text-gray-600 mt-1\">Guessed columns — amount: <strong>{summary.amountKey || 'not found'}</strong>, date: <strong>{summary.dateKey || 'not found'}</strong>, description: <strong>{summary.descKey || 'not found'}</strong></div>\n        </div>\n      )}\n\n      <div className=\"overflow-x-auto border rounded\">\n        <table className=\"min-w-full text-sm\">\n          <thead className=\"bg-gray-100\">\n            <tr>\n              <th className=\"px-3 py-2 text-left\">#</th>\n              {headers.map((h) => (\n                <th key={h} className=\"px-3 py-2 text-left\">{h}</th>\n              ))}\n              <th className=\"px-3 py-2\">Flagged</th>\n            </tr>\n          </thead>\n          <tbody>\n            {rows.map((r, i) => {\n              const isFlag = flagged.some((f) => f.index === i);\n              return (\n                <tr key={i} className={isFlag ? 'bg-red-50' : ''}>\n                  <td className=\"px-3 py-2 align-top\">{i + 1}</td>\n                  {headers.map((h) => (\n                    <td key={h} className=\"px-3 py-2 align-top whitespace-pre-wrap max-w-xs\">{r[h]}</td>\n                  ))}\n                  <td className=\"px-3 py-2 align-top\">{isFlag ? <span className=\"text-red-700 font-medium\">Yes</span> : '—'}</td>\n                </tr>\n              );\n            })}\n            {rows.length === 0 && (\n              <tr><td colSpan={headers.length + 2} className=\"px-3 py-4 text-center text-gray-500\">No data loaded — upload a CSV to begin.</td></tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"mt-4 text-xs text-gray-600\">\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}